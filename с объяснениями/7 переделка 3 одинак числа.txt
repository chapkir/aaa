 class Program
    {
        static void Main()
        {
            Console.Write("Введите строку с натуральными числами через пробел: ");
            string input = Console.ReadLine();

            List<int> numbers = ParseNumbers(input);
            int countOfPairs = CountEqualPairs(numbers);

            Console.WriteLine($"Количество пар равных элементов: {countOfPairs}");
        }

        static List<int> ParseNumbers(string input)
        {
            string[] numberStrings = input.Split(' ');
            List<int> numbers = new List<int>();

            foreach (string numberString in numberStrings)
            {
                if (int.TryParse(numberString, out int number))
                {
                    numbers.Add(number);
                }
            }

            return numbers;
        }

        static int CountEqualPairs(List<int> numbers)
        {
            int count = 0;

            for (int i = 0; i < numbers.Count - 2; i++)
            {
                if (numbers[i] == numbers[i + 1] && numbers[i] == numbers[i + 2])
                {
                    count++;
                }
            }

            return count;
        }
    }


Этот кусок кода представляет собой простую программу на языке C#, состоящую из трех методов: Main, ParseNumbers и CountEqualPairs. Программа предназначена для подсчёта количества пар соседних равных элементов (по условиям заданного кода, трех подряд идущих одинаковых элемента) в списке натуральных чисел введенных пользователем через пробел. Вот краткое описание каждого из методов:

Метод Main:
Это основной метод, который запускается при начале выполнения программы.

Пользователю предлагается ввести строку, содержащую натуральные числа разделенные пробелом.
Введенная строка сохраняется в переменной input.
Строка input передаётся в метод ParseNumbers, который парсит числа и возвращает их в виде списка List<int>.
Полученный список чисел передаётся в метод CountEqualPairs, который подсчитывает количество подходящих пар (тройки одинаковых элементов).
Результат работы метода CountEqualPairs выводится в консоль.
Метод ParseNumbers:
Этот метод принимает строку input и парсит из неё отдельные числа, следующим образом:

Строка input разделяется на массив подстрок с помощью метода Split, который использует пробел в качестве разделителя.
Создается пустой список numbers для хранения преобразованных чисел.
Каждую подстроку из массива numberStrings пытаются преобразовать в число с помощью int.TryParse. Если преобразование успешно, число добавляется в список numbers.
Возвращается заполненный список чисел numbers.
Метод CountEqualPairs:
Этот метод принимает список чисел numbers и подсчитывает количество "пар" из трех подряд идущих одинаковых чисел:

Инициализируется счётчик count, для подсчёта количества таких пар.
С помощью цикла for программа проверяет каждую тройку подряд идущих элементов в списке чисел numbers.
Если три подряд идущих числа одинаковы (numbers[i] == numbers[i + 1] && numbers[i] == numbers[i + 2]), то счётчик count увеличивается на 1.
После прохода по всему списку метод возвращает значение счётчика count.