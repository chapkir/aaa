class Program
{
	static void Main()
        {
            Console.Write("Введите натуральное число n: ");
            int n = int.Parse(Console.ReadLine());

            int digitalRoot = FindDigitalRoot(n);

            Console.WriteLine($"Цифровой корень числа {n} равен: {digitalRoot}");
        }

        static int FindDigitalRoot(int number)
        {
            while (number >= 10)
            {
                number = AddNumbers(number);
            }
            return number;
        }

        static int AddNumbers(int number)
        {
            int sum = 0;
            while (number > 0)
            {
                sum += number % 10;
                number /= 10;
            }
            return sum;
        }
}


Программа, представленная в вашем сообщении на языке программирования C#, рассчитывает цифровой корень числа. Цифровой корень числа - это значение, полученное в результате итеративного процесса суммирования всех цифр числа, пока сумма не будет сведена к одной цифре.

Давайте шаг за шагом рассмотрим, как программа работает:

Метод Main:
При запуске программы в консоли отображается приглашение ввести натуральное число n.
Программа считывает введенное пользователем строковое значение, затем преобразует его в целое число с использованием int.Parse и сохраняет в переменной n.
Далее происходит вызов метода FindDigitalRoot с числом n в качестве аргумента. Результат сохраняется в переменной digitalRoot.
Затем в консоль выводится сообщение с цифровым корнем введенного числа.
Метод FindDigitalRoot:
Этот метод принимает целое число number и возвращает его цифровой корень.
В цикле while реализована проверка - если число number двузначное или большее (то есть больше или равно 10), метод вызывает функцию AddNumbers.
AddNumbers суммирует все цифры числа и возвращает их сумму.
Цикл продолжается до тех пор, пока число не станет однозначным (number < 10), что и будет являться цифровым корнем.
Полученное однозначное число (number) возвращается как цифровой корень исходного числа.
Метод AddNumbers:
Этот метод выполняет суммирование цифр числа number.
Внутри цикла while, который продолжается пока number больше нуля, происходит следующее:
К сумме sum прибавляется последняя цифра числа, которая определяется с помощью number % 10.
Число сокращается на одну цифру (number /= 10), таким образом избавляясь от уже учтенной последней цифры при помощи целочисленного деления.
Как только все цифры числа просуммированы, метод возвращает их сумму sum обратно в метод FindDigitalRoot.
В результате структура программы понятна и лаконична: она снова и снова суммирует цифры заданного числа, пока не будет достигнут однозначный результат, после чего возвращает его в качестве результата.